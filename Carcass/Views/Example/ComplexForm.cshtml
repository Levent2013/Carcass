@using Carcass.Resources

@{ ViewBag.Title = ExamplesResources.ComplexForm; }
<div class="alert alert-comment">
    <button type="button" class="close" data-dismiss="alert">×</button>
    <p>This example shows usage of all supported by Carcass model fields types on a single form.
    All client-side controls are created and initialized automatically.
    </p>
    <p>Complete server side description for this complicated form contains only 6 lines of code. 
<pre>
    @@using (Html.CarcassBeginForm("form-horizontal form-inline-validation", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @@Html.CarcassValidationSummary("tab-form", true)
        @@Html.CarcassEditorForModel( new { CssClass = "tab-form", InlineValidation = true, ValidationClass = "alert alert-error" })
        @@Html.CarcassFormActions(new Dictionary&lt;string, object&gt; { { Buttons.Submit, new { type = "submit", @@class = "btn-primary" } } });
    }
</pre>
    </p>
    <p>Second tab (Html.EditorForModel) display result of legacy ASP.NET MVC <code>Html.EditorForModel</code> usage to compare.</p>
</div>



<div class="tabbable tabs-border">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#CarcassEditorForModel" data-toggle="tab">Html.CarcassEditorForModel</a></li>
        <li><a href="#EditorForModel" data-toggle="tab">Html.EditorForModel</a></li>
    </ul>
<div class="tab-content">
    <div class="tab-pane active" id="CarcassEditorForModel">
        @using (Html.CarcassBeginForm("form-horizontal form-inline-validation", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.CarcassValidationSummary("tab-form", true)
            @Html.CarcassEditorForModel( new { CssClass = "tab-form", InlineValidation = true, ValidationClass = "alert alert-error" })
            @Html.CarcassFormActions(new Dictionary<string, object> { 
                { Buttons.Submit, new { type = "submit", @class = "btn-primary" } } });
        }
    </div>
    <div class="tab-pane" id="EditorForModel">
        @using (Html.BeginForm("ComplexForm", "Example", FormMethod.Post, new { @class = "legacy-mvc-form" }))
        {
           <div class="tab-form">
                @Html.ValidationSummary()
                @Html.EditorForModel()
            </div>
            
            @Html.CarcassFormActions(new Dictionary<string, object> { 
                { Buttons.Submit, new { type = "submit", @class = "btn-primary" } } });
        }

    </div>
</div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render(Url.Action("Validation", "Localization", new { culture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name } ))
}
