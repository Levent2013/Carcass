@model Carcass.Models.LoginModel
@using Carcass.Resources;
@{  ViewBag.Title = Titles.LogIn; }

<div class="alert alert-comment">
    <button type="button" class="close" data-dismiss="alert">×</button>
    Legacy MVC login form refactored with <code>.form-horizontal</code> Bootstrap style.
<pre>
    @@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @@class = "form-horizontal" }))
    ...
    }
</pre>
    <code>Popover</code> overlays added to show additional information about form fields. 
</div>

<h2>Use a local account to log in.</h2>
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <div class="control-group">
        @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(m => m.UserName, 
                new Dictionary<string, object> { 
                    { "placeholder", Html.DisplayNameFor(m => m.UserName) },
                    { "rel", "popover" },
                    { "data-content", "Please enter your user name" },
                    { "data-original-title", Html.DisplayNameFor(m => m.UserName) }
                })
            @Html.ValidationMessageFor(m => m.UserName)
        </div>
    </div>
    <div class="control-group">
        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
        <div class="controls">
            @Html.PasswordFor(m => m.Password,  new Dictionary<string, object> { 
                    { "placeholder", Html.DisplayNameFor(m => m.Password) },
                    { "rel", "popover" },
                    { "data-content", "Please enter your password" },
                    { "data-original-title", Html.DisplayNameFor(m => m.Password) }
            })
            @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>
    
    <div class="control-group">
        <div class="controls">
            <label class="checkbox">
                @Html.CheckBoxFor(m => m.RememberMe,  new Dictionary<string, object> { 
                    { "rel", "popover" },
                    { "data-content", "Check if you want to stay logged in after closing of browser" },
                    // { "data-placement", "left" },
                    { "data-original-title", Html.DisplayNameFor(m => m.RememberMe) }
                })
                @Html.DisplayNameFor(m => m.RememberMe)
            </label>
        </div>
    </div>
    <div class="form-actions">
        <input type="submit" class="btn btn-primary" value="@Buttons.Login" />
    </div>
}
<hr />
    <p>
        @Html.ActionLink("Register", "Register") if you don't have an account.
    </p>
<hr />

<section class="social" id="socialLoginForm">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $("input[rel=popover]").popover({
            html: true, trigger: 'focus'
        });
    </script>
}
